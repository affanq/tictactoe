{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","handleNewGame","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"iPAKE,SAASA,EAAOC,GACd,OACI,4BAAQC,UAAU,SAClBC,QAASF,EAAME,SACXF,EAAMG,O,IAKVC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJI,E,wDAQLC,GAGV,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAChCC,EAAgBP,IAAYA,EAAQI,KAIvCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKG,SACD,CACIR,QAASA,EACTG,SAAUE,KAAKN,MAAMI,a,mCAKlBC,GAAI,IAAD,OACd,OACE,kBAACX,EAAD,CACEI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAM,EAAKa,YAAYL,Q,+BAK5B,IAEJM,EAFG,OACDC,EAASJ,EAAgBF,KAAKN,MAAMC,SAQ1C,OALIU,EADDC,EACU,WAAaA,EAEb,iBAAoBN,KAAKN,MAAMI,QAAU,IAAM,KAI1D,6BACE,yBAAKR,UAAU,UAAUe,GACzB,yBAAKf,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,UAAS,4BAAQC,QAAS,kBAAM,EAAKiB,kBAA5B,gB,sCAM1BR,KAAKG,SACD,CACER,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,Q,GAvEHW,IAAMC,WA6EpBC,E,uKAEF,OACE,yBAAKrB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,OAEF,yBAAKH,UAAU,aACb,8BACA,mC,GATSmB,IAAMC,WAwBzB,SAASR,EAAgBP,GAWvB,IAVA,IAAMiB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CAAC,IAAD,cACnBa,EAAMb,GADa,GAC9Be,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIrB,EAAQmB,IAAMnB,EAAQmB,KAAOnB,EAAQoB,IAAMpB,EAAQmB,KAAOnB,EAAQqB,GACpE,OAAOrB,EAAQmB,GAGnB,OAAO,KAvBTG,IAASC,OACP,kBAACP,EAAD,MACAQ,SAASC,eAAe,W","file":"static/js/main.c050221c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n  function Square(props) {\n    return (\n        <button className=\"square\" \n        onClick={props.onClick}>\n          { props.value }\n        </button>\n      );\n  }\n  \n  class Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          squares: Array(9).fill(null),\n          xIsNext: true\n        };\n      }\n    \n      handleClick(i) {\n\n\n        const squares = this.state.squares.slice();\n        if(calculateWinner(squares) || squares[i]) {\n            return;\n        }\n\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState(\n            {\n                squares: squares,\n                xIsNext: !this.state.xIsNext\n            }\n            );\n      }\n    \n      renderSquare(i) {\n        return (\n          <Square\n            value={this.state.squares[i]}\n            onClick={() => this.handleClick(i)}\n          />\n        );\n      }\n    \n      render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        if(winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + ( this.state.xIsNext ? 'X' : 'O');\n        }\n    \n        return (\n          <div>\n            <div className=\"status\">{status}</div>\n            <div className=\"board-row\">\n              {this.renderSquare(0)}\n              {this.renderSquare(1)}\n              {this.renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n              {this.renderSquare(3)}\n              {this.renderSquare(4)}\n              {this.renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n              {this.renderSquare(6)}\n              {this.renderSquare(7)}\n              {this.renderSquare(8)}\n            </div>\n            <div className=\"status\"><button onClick={() => this.handleNewGame()}>New Game</button></div>\n          </div>\n        );\n      }\n\n      handleNewGame() {\n          this.setState( \n              {\n                squares: Array(9).fill(null),\n                xIsNext: true\n              }\n          );\n      }\n  }\n  \n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  \n  "],"sourceRoot":""}